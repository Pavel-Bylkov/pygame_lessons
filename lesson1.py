# Урок 1

### Позволяет выводить какую либо информацию в консоль
# Пример:
# print('Привет')
### Позволяет вводить данные с консоли
# input('Введите имя: ')

## Переменная
# **Переменная** -объект в памяти, который хранить значение
# Для создания переменной достаточно придумать ей имя.
# Имя должно отражать, то что хранится в переменной
# Переменная, является всего лишь ссылкой на объект в памяти.
# Когда мы указываем ссылку на другой объект, связь со старым
# объектом теряется и он удаляется сборщиком мусора
# number = 5
# print(type(number))
# number --------------------------> [   5   ]
# number = "text"
# print(type(number))
# number -------------X------------> [    5    ]
# number--------------------------> [    "text"   ]

## Основные математические операции
# Сложение - +
# Вычитание - -
# Умножение - *
# Деление - /
# Целочисленное деление - //
# Возведение в степень - **
# Остаток от деления - %
# Примеры:
# print(5 + 2)
# print(5 -2)
# print(5 * 2)
# print(5 / 2)
# print(5 // 2)
# print(5 ** 2)
# print(25 ** 0.5)
# print(15 % 4)  # r = a - b * q, r - остаток , а - 15 b - 4 q - целая часть
# print(-15 % 4)
# print(15 % -4)
# Пример работы с оператором % для вывода сообщения если число
# оканчивается на 25:
# number = 125
# if number % 100 == 25:
#     print('YES')

## Условия
# Условия или операторы ветвления позволяют сделать программу
# более гибкой. Условие создается с помощью оператора **if**,
# после которого указывается выражение. Если выражение верно,
# то срабатывает блок кода с 4 отступами.
# Если логика имеет два варианта( если... иначе), то используется
# необязательный блок **else**
# Пример нахождения четного и нечетного:
# number = int(input('Введите число: '))
# if number % 2 == 0:
#     print('Четное')
# else:
#     print('Нечетное')
# При наличии более двух вариантов, используется конструкция:
# if ...:
#     ...
# elif ...:
#     ...
# else: (необязательный блок)
#     ...
# Примеры:
# temp = int(input())
# if temp < 0:
#     print('Холодно')
# elif 0 < temp < 12:
#     print('Прохладно')
# elif 12 <= temp < 20:
#     print('Тепло')
# elif 20 <= temp < 30:
#     print('Жарко')
# else:
#     print('Очень жарко')

# age = 21
# if  14 < age < 20:
#     print('У вас есть паспорт')
# elif age > 20:
#     print('Вы уже меняли паспорт')
# else:
#     print('У вас нет паспорта')

# Для улучшения читаемости и создания более гибкой логики
# сущетсвуют операторы И (**and**) и ИЛИ (**or**)
# Примеры:
# age = 18
# money = 350
# if age >= 18 and money > 300:
#     print('Вы можете купить билет в кино')
# else:
#     print('Вы не можете купить билет в кино')

# parent = False
# money = 50
# if money > 70 or parent is True:
#     print('Вы можете купить бананы')
# else:
#     print('Вы не можете купить бананы')
#
# number = 20
# print(number == 12, bool(number == 15), bool(number == 14))
# if number == 12 or number == 15 or number == 14:
#     print(f'{number} кота')

# and - логическое умножение 0 * 1 = 0 | 1 * 1 = 1 | 0 * 0 = 0
# or - логическое сложение 0 + 1 = 1 | 1 + 1 = 1 | 0 + 0 = 0

# year = 2001
# if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0:
#     print('Високосный год')
# else:
#     print('Не високосный год')

## Циклы
# В Python есть два цикла: **while** и **for**
# While работает пока выполняется условие, либо может быть бесконечным.
# Примеры:
# count = 0
# while count < 9:
#     print(count)
#     count += 2

# Для остановки циклов используется оператор **break**, который
# полностью останавливает цикл
# Примеры:
# flag = True
# while flag:
#     print('Цикл')
#     stop = input('Остановить цикл: ')
#     if stop == 'y':
#         flag = False
# Для перехода цикла к следующему повтору, минуя код ниже используется
# оператор **continue**
# Примеры:
# count = 0
# while count < 10:
#     count += 1
#     if count % 2 == 0:
#         continue
#     print(count)
# Цикл for в отличии от while, работает ограниченное количество раз.
# Конкретное количество раз:
# for i in range(10):
#     print(i)
# По длине строки, либо же иного типа данных, хранящего последовательность:
# name = "Владимир"
# for char in name:
#     print(char, end=" ")
# for i in range(len(name)):
#     # name[i] = "D"
#     print(name[i], end=" ")
# print(name)
# Перебрать строку может и while, но он не такой удобный:
# i = 0
# while i < len(name):
#     print(name[i])i += 1