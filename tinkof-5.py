n = int(input())  # высота горы
a = [int(x) for x in input().split()]
b = [int(x) for x in input().split()]

i = n
count = 0
while i > 0:
    for jump in range(a[i - 1], 0, -1):
        if i - jump + b[i - jump - 1] < i:
            i -= jump
            break
    else:
        print(-1)
        break
    if i > 0:
        i += b[i - 1]
    count += 1
else:
    print(count)


"""
Лягушонок Линк решил забраться на гору высотой n метров во время дождя. 
Поскольку в дождь горы скользкие, то после каждого прыжка Линк 
соскальзывает на некоторое расстояние вниз. Более формально, если Линк 
делает прыжок, будучи на расстоянии i метров от вершины, то он может 
прыгнуть на любую высоту от 0 до a_i дополнительных метров наверх. 
Но схватившись за скалу на расстоянии j метров от вершины, Линк проскользит 
вниз на b_j метров.

От вас требуется определить минимальное количество прыжков, которое 
потребуется Линку для подъема наверх.

Формат входных данных

В первой строке задано целое положительное число n (1⩽n⩽300000) - высота горы.

Во второй строке задано n целых чисел a_1, a_2, a_n (0⩽a⩽i)− максимальная высота, 
доступная для прыжка на заданном расстоянии от вершины.

В третьей строке вводится n целых чисел b_{1}, b_2, b_n (0⩽b ⩽n−i)− количество метров, 
которые лягушонок проскользит вниз, приземлившись на расстоянии i от вершины.

Формат выходных данных

В первой строке выведите целое число k минимально возможное количество прыжков.
 В случае, если Линк не сможет добраться до верха горы, выведите -1.

Замечание

В первом тесте из условия Линк за один прыжок поднимается к отметке на
 расстоянии 1 метр от вершины. После этого он соскальзывает вниз на метр. 
 Следующим прыжком он запрыгнет на гору.

Примеры данных
Пример 1
3
0 2 2
1 1 0

2

Пример 2
2
1 1
1 0

-1

Пример 3
10
0 1 2 3 5 5 6 7 8 5
9 8 7 1 5 4 3 2 0 0

3

"""
